<?php

/**
 * @file
 * Instagram widget module.
 */

use Drupal\neg_instagram_widget\Settings;
use Drupal\neg_instagram_widget\Views\ListView;

/**
 * Implements hook_theme().
 */
function neg_instagram_widget_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__instagram_posts_widget' => [
      'template' => 'paragraph_instagram',
      'base hook' => 'paragraph',
    ],
    'neg_instagram_widget_list_view' => [
      'template' => 'list_view',
      'variables' => [
        'posts' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_paragraph().
 */
function neg_instagram_widget_preprocess_paragraph(&$variables) {
  $method = '_neg_instagram_widget_process_paragraph_' . $variables['paragraph']->getType();

  if (function_exists($method)) {
    $method($variables);
  }
}

/**
 * Preproccess IG Paragraph.
 */
function _neg_instagram_widget_process_paragraph_instagram_posts_widget(&$variables) {
  $variables['attributes']['class'][] = 'paragraph';
  $variables['attributes']['class'][] = 'paragraph-instagram-posts';
  $variables['attributes']['aria-hidden'] = 'true';

  $view = new ListView($variables);
  $view->render(50);
}

/**
 * Implements hook_cron().
 */
function neg_instagram_widget_cron() {

  $config = Settings::config();
  $runtime = time();
  $cache_lifetime = $config->get('frequency');
  $last_sync = \Drupal::state()->get('neg_instagram.last_sync', 0);

  // Check if we need to sync.
  if (($last_sync + $cache_lifetime) > $runtime) {
    return;
  }

  $queue_factory = \Drupal::service('queue');
  $queue = $queue_factory->get('instagram_widget_sync');

  if ($queue->numberOfItems() == 0) {
    $command = [
      'op' => 'sync',
    ];
    $queue->createItem($command);
  }

}
